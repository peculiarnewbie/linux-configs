// Place your key bindings in this file to override the defaultsauto[]
[
	{
		"key": "ctrl+p",
		"command": "-extension.vim_ctrl+p",
		"when": "editorTextFocus && vim.active && vim.use<C-p> && !inDebugRepl || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
	},
	{
		"key": "ctrl+shift+w",
		"command": "-workbench.action.closeWindow"
	},
	{
		"key": "ctrl+shift+w",
		"command": "workbench.action.closeOtherEditors"
	},
	{
		"key": "ctrl+b",
		"command": "-extension.vim_ctrl+b",
		"when": "editorTextFocus && vim.active && vim.use<C-b> && !inDebugRepl && vim.mode != 'Insert'"
	},
	{
		"key": "alt+v",
		"command": "workbench.action.terminal.toggleTerminal",
		"when": "terminal.active"
	},
	{
		"key": "ctrl+`",
		"command": "-workbench.action.terminal.toggleTerminal",
		"when": "terminal.active"
	},
	{
		"key": "shift+tab",
		"command": "workbench.action.previousEditor",
		"when": "!inputFocus || editorTextFocus && vim.active && !inDebugRepl"
	},
	{
		"key": "space e",
		"command": "workbench.action.toggleSidebarVisibility",
		"when": "filesExplorerFocus && !inputFocus"
	},
	{
		"key": "a",
		"command": "explorer.newFile",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "f",
		"command": "explorer.newFolder",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "r",
		"command": "renameFile",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "x",
		"command": "filesExplorer.cut",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "y",
		"command": "filesExplorer.copy",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
	},
	{
		"key": "p",
		"command": "filesExplorer.paste",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "alt+l",
		"command": "-toggleSearchEditorContextLines",
		"when": "inSearchEditor"
	},
	{
		"key": "alt+l",
		"command": "-toggleFindInSelection",
		"when": "editorFocus"
	},
	{
		"key": "alt+l",
		"command": "workbench.action.nextEditor",
		"when": "!inputFocus || editorTextFocus && vim.active && vim.mode != 'Insert'"
	},
	{
		"key": "alt+h",
		"command": "workbench.action.previousEditor",
		"when": "!inputFocus || editorTextFocus && vim.active && !inDebugRepl"
	},
	{
		"key": "alt+h",
		"command": "-gitlens.showQuickFileHistory",
		"when": "!gitlens:disabled && config.gitlens.keymap == 'alternate'"
	},
	{
		"key": "alt+h",
		"command": "-testing.toggleTestingPeekHistory",
		"when": "testing.isPeekVisible"
	},
	{
		"key": "ctrl+g",
		"command": "-extension.vim_ctrl+g",
		"when": "editorTextFocus && vim.active && vim.use<C-g> && !inDebugRepl"
	},
	{
		"key": "ctrl+g",
		"command": "-workbench.action.terminal.goToRecentDirectory",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+g",
		"command": "-workbench.action.gotoLine"
	},
	{
		"key": "ctrl+g",
		"command": "workbench.view.scm",
		"when": "workbench.scm.active"
	},
	{
		"key": "ctrl+shift+g",
		"command": "-workbench.view.scm",
		"when": "workbench.scm.active"
	},
	{
		"key": "ctrl+k",
		"command": "selectPrevSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
	},
	{
		"key": "shift+k",
		"command": "editor.action.showDefinitionPreviewHover",
		"when": " vim.mode == 'Normal'"
		// "when": "editorTextFocus && inputFocus && notebookEditorFocused && vim.mode == 'Normal'"
	},
	{
		"key": "ctrl+j",
		"command": "workbench.action.quickOpenNavigateNextInFilePicker",
		"when": "inFilesPicker && inQuickOpen"
	},
	{
		"key": "ctrl+k",
		"command": "workbench.action.quickOpenNavigatePreviousInFilePicker",
		"when": "inFilesPicker && inQuickOpen"
	}
]
